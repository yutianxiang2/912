@{
    ViewBag.Title = "角色管理";
    ViewBag.MenuId = "menu1";
    ViewBag.SubMenuIndex = 1;
    Layout = "~/Views/Shared/_ContentLayout.cshtml";
}
<div id="main-content">
    <!-- MODAL 增加-->
    <div class="modal fade" id="parent-modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div id="model-dlg" class="modal-dialog" style="width:800px">
            <div class="modal-content modal-table">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="box border blue">
                                <div class="box-title">
                                    <h4><i class="fa fa-windows"></i>@Resources.Language.Role_AddRole</h4>
                                    <div class="tools hidden-xs">
                                        <a href="javascript:;" class="" onclick="$('#parent-modal').modal('hide');">
                                            <i class="fa fa-times"></i>
                                        </a>
                                    </div>
                                </div>
                                <div class="box-body big">
                                    <form class="form-horizontal" role="form">
                                        <div class="row">
                                            <div class="col-sm-6">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">@Resources.Language.Role_RoleName</label>
                                                    <div class="col-sm-8">
                                                        <input id="_RoleName" class="form-control" placeholder="@Resources.Language.Role_RoleName" onfocus="$(this).parent().removeClass('has-error')" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-sm-6">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">*@Resources.Language.Role_Dept</label>
                                                    <div class="col-sm-8">
                                                        <input id="_Dept" type="text" class="form-control" placeholder="@Resources.Language.Role_Dept" onfocus="$(this).parent().removeClass('has-error')" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-6">
                                                <div class="form-group">
                                                    <label class="col-sm-4 control-label">@Resources.Language.Role_System</label>
                                                    <div class="col-sm-8">
                                                        <input id="_System" type="text" class="form-control" placeholder="@Resources.Language.Role_System" onfocus="$(this).parent().removeClass('has-error')" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-12">
                                                <div class="form-group">
                                                    <label class="col-sm-2 control-label">@Resources.Language.Remark</label>
                                                    <div class="col-sm-10">
                                                        <textarea id="_Remark" rows="3" class="form-control" placeholder="@Resources.Language.Remark" onfocus="$(this).parent().removeClass('has-error')"></textarea>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                    <div id="parentErrMsg" class="alert alert-block alert-warning fade in" hidden>
                                        <i class="fa fa-exclamation-circle"></i><p style=""></p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">@Resources.Language.Close</button>
                    <button type="button" class="btn btn-primary" onclick="submitParentModal()">@Resources.Language.Submit</button>
                </div>
            </div>
        </div>
    </div>
    <!-- /MODAL 增加-->
    <div class="container">
        <div class="row">
            <div id="content" class="col-lg-12">
                <!-- PAGE HEADER-->
                <div class="row">
                    <div class="col-sm-12">
                        <div class="">
                            <!-- STYLER -->
                            <!-- /STYLER -->
                            <!-- BREADCRUMBS -->
                            <ul class="breadcrumb">
                                <li>
                                    <i class="fa fa-home"></i>
                                    <a href="#">@Resources.Language.HomePage</a>
                                </li>
                                <li>
                                    <i class="fa fa-briefcase fa-fw"></i>
                                    <a href="#">@Resources.Language.Role</a>
                                </li>
                                <li>
                                    @Resources.Language.RoleManage
                                </li>
                            </ul>
                            <!-- /BREADCRUMBS -->
                          
                        </div>
                    </div>
                </div>
                <!-- /PAGE HEADER -->
                @*<div class="row">
                        <div class="col-md-12">
                            <div class="box border orange">
                                <div class="box-title">
                                </div>
                                <div class="box-body">
                                    <div>
                                        <ul>
                                            <li>@Model.Code</li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>*@
                <!-- SAMPLE -->
                <div class="row">
                    <div class="col-md-12">
                        <!-- BOX -->
                        <div class="box border orange">
                            <div class="box-title">
                                <h4><i class="fa fa-bars"></i>@Resources.Language.RoleManage</h4>
                            </div>
                            <div id="jqGridContainerBox" class="box-body">
                                <table id="jqGrid"></table>
                                <div id="jqGridPager"></div>
                            </div>
                        </div>
                        <!-- /BOX -->
                    </div>
                </div>
                <!-- /SAMPLE -->
                <div class="footer-tools">
                    <span class="go-top">
                        <i class="fa fa-chevron-up"></i> Top
                    </span>
                </div>
            </div>
        </div>
        <div id="services" class="row" hidden>
            @{
                List<DataModel.CustomField> list = ViewBag.Services;
                for (int i = 0; i < list.Count; i++)
                {
                    string s_id = "service" + i.ToString();
                    <div id='@s_id'>
                        <span>@list[i].IDX</span>
                        <span>@list[i].CustomValue</span>
                        <span>@list[i].CustomLabel</span>
                    </div>
                }

            }
        </div>
    </div>
</div>
<script type="text/javascript">
    var tableConfig = null;

    $(document).ready(Init);

    function Init() {
        {

            if (tableConfig == null) {
                GetTableConfig();
            }

            $("#jqGrid").jqGrid({
                //url: 'http://trirand.com/blog/phpjqgrid/examples/jsonp/getjsonp.php?callback=?&qwery=longorders',
                url: "/Permit/GetRoleData",
                mtype: "GET",
                datatype: "json",
                colModel: tableConfig.columns,
                viewrecords: true,
                //width: 780,
                height: '100%', //350,
                rowNum: 30,
                autowidth: true,
                editurl: "/Permit/AddEditRole",
                pager: "#jqGridPager",
                loadonce: true,
                rowList: ['30', '50', '80', '100'],
                rownumbers: true,
                shrinkToFit: false,     //指定各列宽度
                sortable: true,          //列可移动
                colMenu: true          //列菜单
            });

            //$('#jqGrid').jqGrid('filterToolbar', { searchResult: true, searchOperators: true });
            $("#jqGrid").jqGrid('bindKeys');  //光标可以控制上下移动

            $('#jqGridContainerBox').resize(function () {
                var width = $('#jqGridContainerBox').width();
                $("#jqGrid").setGridWidth(width);
            });

            $('#jqGrid').navGrid('#jqGridPager', { edit: false, add: false, del: false, refresh: false, view: false, search: false })

                .navButtonAdd('#jqGridPager', {
                    caption: "", title: '@Resources.Language.Refresh', buttonicon: "ui-icon-refresh",
                    onClickButton: function () {
                        //alert("haha");
                        @*$.ajax(
                            {
                                type: "get",
                                url: '@Url.Action("GetDataForLoadOnce", "OrderManage")',
                                dataType: 'json',
                                type: 'get',
                                data:{'_search':false, 'sidx':'', 'sord':'', 'page':1, 'rows':10},
                                success: function (result) {

                                    $('#jqGrid').jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
                                },
                            }
                            );*@

                        $('#jqGrid').jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
                    }
                })
                .navSeparatorAdd("#jqGridPager", { sepclass: "ui-separator", sepcontent: '' })
                .navButtonAdd('#jqGridPager', {
                    caption: "", title: '@Resources.Language.DeleteSelectedRows', buttonicon: "ui-icon-trash",
                    onClickButton: function () {
                        var rowid = jQuery('#jqGrid').jqGrid('getGridParam', 'selrow');
                        var dr = jQuery("#jqGrid").jqGrid('getRowData', rowid);//得到该行的数据
                        if (rowid != null) {
                            if (confirm('@Resources.Language.SureDelete')) {
                                var d = new Date();
                                $.ajax(
                                    {
                                        type: "post",
                                        url: "/Permit/DeleteRole",
                                        data: { 'oper': 'delete', 'data': dr },//"oper=delete&id=" + gr,
                                        dataType: 'json',
                                        success: function (result) {
                                            alert(result.message);
                                            //jQuery("#jqGrid").jqGrid('delRowData', rowid);
                                            $('#jqGrid').jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
                                        },

                                    }
                                    );
                            }
                        }
                        else {
                            alert('选中一行');
                        }
                    },
                    position: "last"
                })
             .navButtonAdd('#jqGridPager', {
                 //id: 'jqGrid_ilrefresh',
                 caption: "", title: '@Resources.Language.Add', buttonicon: "ui-icon-plus",
                 onClickButton: AddRole
             });
            $('#jqGrid').inlineNav('#jqGridPager',
                {
                    edit: true,
                    add: false,
                    del: true,
                    cancel: true,
                    editParams: {
                        keys: true,
                        successfunc: function (val) {
                            if (val.responseText != "") {
                                var ret = $.parseJSON(val.responseText);
                                alert(ret.message);
                                $(this).jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
                            }
                        },
                        url: null, //'/api/values',
                        mtype: 'POST'
                    },

                    addParams: {
                        keys: true,
                        successfunc: function (val) {
                            if (val.responseText != "") {
                                var ret = $.parseJSON(val.responseText);
                                alert(ret.message);
                                $(this).jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
                            }
                        },
                        errorfunc: function (rowid, xhr) {
                            alert(xhr.responseText);
                            $(this).jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
                        }
                    }
                });

            //最后调用，冻结列
            //$("#jqGrid").jqGrid("setFrozenColumns");
        }
    }

    function GetTableConfig() {
        tableConfig = {
            columns: [

                {
                    align: 'center', label: '@Resources.Language.IDX', index: "IDX", name: "IDX", width: 100, editable: true, edittype: "text",
                    editrules: { required: false }, hidden: true,
                },
                {
                    align: 'center', label: '@Resources.Language.Role_RoleName', name: "RoleName", width: 90, editable: true, edittype: "text",
                    editrules: { required: true }, colmenu: false,
                    hidden: false,
                    searchoptions: { sopt: ["ge", "le"] }
                },
                {
                    align: 'center', label: '@Resources.Language.Role_Dept', name: "Dept", width: 100, editable: true, edittype: "text",
                    editrules: { required: false }, hidden: false,
                    editoptions: {
                        //defaultValue: function () { return Date().toString(); }
                    },
                    searchoptions: { sopt: ["cn"] }
                },
                {
                    align: 'center', label: '@Resources.Language.Role_System', name: "System", width: 100, editable: true, edittype: "text",
                    editrules: { required: false }, hidden: false,
                    editoptions: {
                        //defaultValue: function () { return Date().toString(); }
                    },
                    searchoptions: { sopt: ["cn"] }
                },
                {
                    align: 'center', label: '@Resources.Language.Remark', name: "Remark", width: 200, editable: true, edittype: "textarea",
                    editrules: { required: false }, hidden: false
                },
                {
                    align: 'center', label: '@Resources.Language.OwnerID', name: "OwnerID", width: 100, editable: true, edittype: "text",
                    editrules: { required: false }, hidden: true,
                    editoptions: {
                        defaultValue: -1
                    }
                },
                {
                    align: 'center', label: '@Resources.Language.UserID', name: "UserID", width: 100, editable: true, edittype: "text",
                    editrules: { required: false }, hidden: true
                },
                {
                    align: 'center',
                    label: '@Resources.Language.CreateDate', name: "CreateDate", width: 100, editable: false, edittype: "text",
                    editrules: { required: false, date: true }, hidden: false,
                    colmenu: false, coloptions: { sorting: false, columns: false, filtering: false, seraching: false, grouping: false, freeze: false },
                    editoptions: {
                        dataInit: function (element) {
                            $(element).datetimepicker({
                                format: 'Y-m-d H:i:s',
                                step: 1,
                            });
                        },
                        defaultValue: new Date().Format("yyyy-MM-dd hh:mm:ss")
                    },
                    searchoptions: {
                        sopt: ["lt", "ge"],
                        dataInit: function (element) {
                            $(element).datetimepicker({
                                format: 'Y-m-d H:i:s',
                                step: 1,
                            });
                        }
                    }
                },
                {
                    align: 'center',
                    label: '@Resources.Language.LastUpDate', name: "LastUpDate", width: 100, editable: false, edittype: "text",
                    editrules: { required: false, date: true }, hidden: false,
                    colmenu: false, coloptions: { sorting: false, columns: false, filtering: false, seraching: false, grouping: false, freeze: false },
                    editoptions: {
                        dataInit: function (element) {
                            $(element).datetimepicker({
                                format: 'Y-m-d H:i:s',
                                step: 1,
                            });
                        },
                        defaultValue: new Date().Format("yyyy-MM-dd hh:mm:ss")
                    },
                    searchoptions: {
                        sopt: ["lt", "ge"],
                        dataInit: function (element) {
                            $(element).datetimepicker({
                                format: 'Y-m-d H:i:s',
                                step: 1,
                            });
                        }
                    }
                },
                {
                    align: 'center', label: '@Resources.Language.UserDefinedCol1', name: "UserDefinedCol1", width: 100, editable: true, edittype: "text",
                    editrules: { required: false }, hidden: true
                },
                {
                    align: 'center', label: '@Resources.Language.UserDefinedCol2', name: "UserDefinedCol2", width: 100, editable: true, edittype: "text",
                    editrules: { required: false }, hidden: true
                },
                {
                    align: 'center', label: '@Resources.Language.UserDefinedCol3', name: "UserDefinedCol3", width: 100, editable: true, edittype: "text",
                    editrules: { required: false }, hidden: true
                },
                {
                    align: 'center', label: '@Resources.Language.UserDefinedCol4', name: "UserDefinedCol4", width: 100, editable: true, edittype: "text",
                    editrules: { required: false }, hidden: true
                },
                {
                    align: 'center', label: '@Resources.Language.UserDefinedCol5', name: "UserDefinedCol5", width: 100, editable: true, edittype: "text",
                    editrules: { required: false, number: true }, hidden: true
                },
                {
                    align: 'center', label: '@Resources.Language.UserDefinedCol6', name: "UserDefinedCol6", width: 100, editable: true, edittype: "text",
                    editrules: { required: false, integer: true }, hidden: true
                },
                {
                    align: 'center', label: '@Resources.Language.UserDefinedCol7', name: "UserDefinedCol7", width: 100, editable: true, edittype: "text",
                    editrules: { required: false, integer: true }, hidden: true
                },
                {
                    align: 'center', label: '@Resources.Language.UserDefinedCol8', name: "UserDefinedCol8", width: 100, editable: true, edittype: "text",
                    editrules: { required: false, integer: true }, hidden: true
                },
                {
                    align: 'center', label: '@Resources.Language.UserDefinedCol9', name: "UserDefinedCol9", width: 100, editable: true, edittype: "text",
                    editrules: { required: false, date: true }, hidden: true,
                    datefmt: 'yyyy-mm-dd',
                    sorttype: 'date',
                    editoptions: {
                        dataInit: function (element) {
                            $(element).datetimepicker({
                                format: 'Y-m-d H:i:s',
                                step: 1,
                            });
                        },
                        defaultValue: new Date().Format("yyyy-MM-dd hh:mm:ss")
                    },

                    searchoptions: {
                        sopt: ["lt", "ge"],
                        dataInit: function (element) {
                            $(element).datetimepicker({
                                format: 'Y-m-d H:i:s',
                                step: 1,
                            });
                        }
                    }
                },

                {
                    align: 'center', label: '@Resources.Language.UserDefinedCol10', name: "UserDefinedCol10", width: 100, editable: true, edittype: "text",
                    editrules: { required: false, date: true }, hidden: true,
                    datefmt: 'yyyy-mm-dd',
                    sorttype: 'date',
                    editoptions: {
                        dataInit: function (element) {
                            $(element).datetimepicker({
                                format: 'Y-m-d H:i:s',
                                step: 1,
                            });
                        },
                        defaultValue: new Date().Format("yyyy-MM-dd hh:mm:ss")
                    },

                    searchoptions: {
                        sopt: ["lt", "ge"],
                        dataInit: function (element) {
                            $(element).datetimepicker({
                                format: 'Y-m-d H:i:s',
                                step: 1,
                            });
                        }
                    }
                }
            ]
        };
    }
    //模态框
    function AddRole() {
        $('#parent-modal').modal()
    }
    function initParentModal() {
        $('#parentErrMsg').hide();
        $('#_RoleName').parent().removeClass("has-error");
        $('#_Dept').parent().removeClass("has-error");
        $('#_System').parent().removeClass("has-error");
        $('#_Remark').parent().removeClass("has-error");

        $('#_RoleName').val("");
        $('#_Dept').val("");
        $('#_System').val("");
        $('#_Remark').val("");

    }

    $('#parent-modal').on('show.bs.modal', function (e) {
        initParentModal();
    });
    $('#parent-modal').on('shown.bs.modal', function (e) {
    });
    $('#parent-modal').on('hide.bs.modal', function () {
        $(this).removeData("bs.modal");
    });
    $('#parent-modal').on('hidden.bs.modal', function () {
        $(this).removeData("bs.modal");
    });
    function submitParentModal() {
        var maxTextLength = 25;
        var maxTextAreaLength = 500;

        $('#parentErrMsg').hide();
        $('#_RoleName').parent().removeClass("has-error");
        $('#_Dept').parent().removeClass("has-error");
        $('#_System').parent().removeClass("has-error");
        $('#_Remark').parent().removeClass("has-error");

        var RoleName = $('#_RoleName').val();
        var Dept = $('#_Dept').val();
        var System = $('#_System').val();
        var Remark = $('#_Remark').val();

        if (RoleName.length <= 0) {
            $('#parentErrMsg p').html('@Resources.Language.Customer_Name1' + "@Resources.Language.IsNull");
            $('#_RoleName').parent().addClass("has-error");
            $('#parentErrMsg').show();
            return;
        }
        //提交数据库
        $.ajax({
            type: "post",
            url: "/Permit/AddRole",
            data: {
                'RoleName': RoleName,
                'Dept': Dept,
                'Remark': Remark,
                'System': System
            },
            dataType: 'json',
            success: function (result) {

                $('#parent-modal').modal('hide')
                alert(result.message);

                $('#jqGrid').jqGrid('setGridParam',
                {
                    datatype: 'json',
                    url: "/Permit/GetRoleData",
                }).trigger('reloadGrid');

                $("#jqGrid").jqGrid('setGridParam', { editurl: "/Permit/AddEditRole", data: { 'oper': 'edit' } });

            },
            error: function (result) {
                console.log(result)
                try {
                    var json = $.parseJSON(result.responseText);
                    alert(json.errorMessage);
                } catch (e) {
                    alert(e.message);
                }
                return;
            }

        });

    }
</script>